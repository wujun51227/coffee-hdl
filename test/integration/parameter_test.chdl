#########################################################3
# Design
#########################################################3
class SubModule extends Module
  constructor: (param=null)->
    super()
    Mixin importLib('verilog_helpers.chdl')
    Port(
      dout: output(16)
    )

    Property(
      module_parameter: [
        { key:'hello',value:100}
      ]
      override_parameter: param
    )

    Mem(
      mem: vec(10,20)
    )

  build: ->
    value = getParameter('hello')
    assign @dout =  value

class ParameterTest extends Module
  u0_cell: new SubModule([
      { key:'hello',value:200}
  ])

  constructor: ->
    super()
    Mixin importLib('verilog_helpers.chdl')
    Port()

    Channel(
      ch: channel()
    )

    @u0_cell.bind(
      dout: @ch
    )

  build: ->
    initial
      $flow =>
        go 100
        @readmemh('hello',@u0_cell.mem)
        @assert_eq(@ch,200,'test parameter')
        @assert_report()
        @sim_finish()

module.exports=ParameterTest

