master_cell = importLib('./sub_module/master.chdl')
slave_cell = importLib('./sub_module/slave.chdl')

class cell1 extends Module
  u0_master_cell: new master_cell()
  constructor: ->
    super()

    Channel(
      master_channel: channel()
    )

    @u0_master_cell.bind(
      master: @master_channel
    )

  build: ->

class cell2 extends Module
  u0_slave_cell: new slave_cell()
  constructor: ->
    super()

    Channel(
      slave_channel: channel()
    )

    @u0_slave_cell.bind(
      slave: @slave_channel
    )

  build: ->


class ImportTest extends Module
  u0_cell1: new cell1()
  u0_cell2: new cell2()

  constructor: ->
    super()
    Mixin importLib('verilog_helpers.chdl')

    Probe(
      aaa: 'u0_cell1.master_channel'
      bbb: 'u0_cell2.slave_channel'
    )

  build: ->
    $channelPortHub(@aaa,@bbb)

    initial
      $sequence()
      .delay(1000) =>
        @assert_report()
        @sim_finish()
      .end()

module.exports=ImportTest

