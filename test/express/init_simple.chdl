class InitSimple extends Module
  constructor: ->
    super()
    Port(
      out: input(5)
      sel: input()
      sel1: input()
      out1: input()
      out2: input()
      out3: input()
    )

    Reg(
      aa: vreg()
      cc: vreg()
    )

  build: ->
    @aa.delay(10)

    forever
      $sequence() =>
      .delay(10) =>
        assign(@cc) = $ !@cc
      .end()

    write=(addr,data)=>
      $sequence('do_write') =>
        .posedge(@sel1) =>
          assign(@aa) = $ @out1
        .negedge(@sel) =>
          assign(@aa) = $ @out2
        .wait($(@sel==1)) =>
          assign(@aa) = $ @out2
        .end()

    a= =>
      $sequence('delay') =>
        .delay(null) =>
          @verilog("aaaa")
          assign(@aa) = $ 1
        .delay(10) =>
          assign(@aa) = $ 1
        .delay(10) =>
          assign(@aa) = $ 1
        .event('hello')
        .end()

    initial
      $sequence() =>
        assign(@aa) = $ 100
      .end()

    initial
      a()
      write(0x0,0x4)

      

module.exports=InitSimple

