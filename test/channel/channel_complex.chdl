#########################################################3
# Design
#########################################################3
class cell1 extends Module
  constructor: ->
    super()
    Port(
      bus:
        din: input(16)
        dout: output(16)
    )

  build: ->


class cell2 extends Module
  u0_cell1: new cell1()

  constructor: ->
    super()
    Port(
      bundle:
        cell_port:bind('cell1_ch')
    )

    Channel(
      cell1_ch: channel()
    )

    @u0_cell1.bind(
      bus: @cell1_ch
    )

  build: ->

class cell3 extends Module
  u0_cell2: new cell2()

  constructor: ->
    super()
    Port(
      bundle:
        cell_port:bind('cell2_ch')
    )

    Channel(
      cell2_ch: channel()
      )

    @u0_cell2.bind(
      bundle: @cell2_ch
    )

  build: ->

class ChannelComplex extends Module
  u0_cell3: new cell3()

  constructor: ->
    super()
    Port(
      top_bundle:
        top_port: bind('top_ch')
    )

    Channel(
      top_ch: channel()
      )

    @u0_cell3.bind(
      bundle: @top_ch
    )

  build: ->

module.exports=ChannelComplex

