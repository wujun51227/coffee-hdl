class cell1 extends Module
  constructor: ->
    super()
    Port(
      bundle:
        din: output(16)
        dout: input(16)
    )

  build: ->
    assign @bundle.din= @bundle.dout

class cell2 extends Module
  constructor: ->
    super()
    Mixin importLib('verilog_helpers.chdl')
    Port(
      bundle:
        din: input(16)
        dout: output(16)
    )

  build: ->
    v1 = vreg(16)
    assign @bundle.dout = v1
    initial
      $sequence()
      .delay(100) =>
        assign v1 = 0x55aa
      .delay(100) =>
        @assert_eq(@bundle.din,0x55aa,'test connection')
        @assert_report('channel connect')
        @sim_finish()
      .end()


class ChannelConn extends Module
  u0_cell2: new cell2()
  u0_cell1: new cell1()

  constructor: ->
    super()

    Channel(
      conn: channel()
      )

    @u0_cell1.bind(
      bundle: @conn
    )

    @u0_cell2.bind(
      bundle: @conn
    )

module.exports=ChannelConn

