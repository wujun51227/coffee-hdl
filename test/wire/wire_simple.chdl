#########################################################3
# Design
#########################################################3

class WireSimple extends Module
  constructor: ->
    super()
    Port(
      din: input(5)
      dout: input(6)
    )

    Wire(
      w1: wire(5)
      w2: wire(5)
      w3: wire(5)
      w4: wire(5).defaultValue(12)
      sel1: wire()
      sel2: wire()
      sel3: wire()
      result: wire(33).setField(
        carry: 32
        sum: [31,0]
        )
    )

  build: ->
    assign(@w1) = @din
    assign(@w2(2:0)) = @din(4:2)
    #assign(@w2(2:0)) => $ @din.fromMsb(3)
    #assign(@w2(2:0)) => $ @din.fromLsb(3)
    assign(@dout(2:0)) = @w3.reverse()(4:2)
    width=5
    assign(@dout([width-1]:3)) = @w3.select((i)=>i%2==0)
    assign(@result.field('carry')) = 1
    assign(@result.field('sum')) = 32\h12345678

    always
      $if(@w1>2)
        assign(@w4) = $ @w1 + 1
      $else
        assign(@w4) = $ @w1 - 1
        assign(@w2) = $ @w3 + 1

module.exports=WireSimple

