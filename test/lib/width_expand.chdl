_ = require 'lodash'

class widthExpandTb extends Module
  constructor: ->
    super()

    Mixin importLib('chdl_component_lib.chdl')
    Mixin importLib('verilog_helpers.chdl')

    Reg(
      tx_clk: vreg()
      rstn: vreg().init(1)
      din:vreg(16)
      push:vreg()
    )

    Wire(
      rx_data: wire(16)
      rx_done: wire()
      ack: wire()
      ready: wire()
      dout: wire(16*4)
    )

    Property(
      default_clock: 'tx_clk'
      default_reset: 'rstn'
    )


  build: ->
    @create_clock(@tx_clk,10)
    @create_resetn(@rstn)

    initial
      $flow =>
        go 500
        posedge @tx_clk
        assign @din=0x7
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x0
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x3
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x2
        assign @push=1
        posedge @tx_clk
        assign @push=0
        go 5
        @assert_1(@ready,'ready set test')
        display('dout is %x',$(@dout))
        @assert_eq(@dout,64'h0002000300000007','expand test')
        posedge @tx_clk
        go 5
        @assert_1(@ready,'ready set test')
        posedge @tx_clk
        go 5
        @assert_1(@ready,'ready set test')
        posedge @tx_clk
        go 5
        @assert_1(@ready,'ready set test')
        posedge @tx_clk
        go 5
        @assert_0(@ready,'ready set test')
        posedge @tx_clk
        assign @din=0x5
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x6
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x4
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x1
        assign @push=1
        posedge @tx_clk
        assign @push=0
        go 5
        @assert_1(@ready,'ready set test')
        display('dout is %x',$(@dout))
        @assert_eq(@dout,64'h0001000400060005','expand test')
        posedge @tx_clk
        assign @din=0x7
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x3
        assign @push=1
        posedge @tx_clk
        assign @push=0
        posedge @tx_clk
        assign @din=0x0
        assign @push=1
        posedge @tx_clk
        assign @push=0
        go 5
        @assert_0(@ready,'ready set test')
        go 100
        @assert_report("width expand test")
        @sim_finish()

    assign({ready:@ready,data:@dout})  = $width_expand(@push,@din,0,4)



module.exports=widthExpandTb
