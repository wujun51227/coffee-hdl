_ = require 'lodash'

class roundArbTb extends Module
  constructor: ->
    super()

    Mixin importLib('chdl_component_lib.chdl')
    Mixin importLib('verilog_helpers.chdl')

    Reg(
      clk: vreg()
      rstn: vreg().init(1)
      d1:vreg()
      d2:vreg()
      d3:vreg()
      enable: vreg()
    )

    Property(
      default_clock: 'clk'
      default_reset: 'rstn'
    )


  build: ->
    @create_clock(@clk,10)
    @create_resetn(@rstn)

    Net(dout,2) = $round_arbiter([@d1,@d2,@d3],@enable)

    initial
      $flow =>
        go 500
        posedge @clk
        assign @enable=1
        assign @d1=1
        assign @d2=1
        assign @d3=1
        go 5
        @assert_eq(dout,0,'arb select d1')
        posedge @clk
        go 5
        @assert_eq(dout,1,'arb select d2')
        posedge @clk
        go 5
        @assert_eq(dout,2,'arb select d3')
        posedge @clk
        assign @d1=0
        assign @d2=0
        assign @d3=1
        go 5
        @assert_eq(dout,2,'arb select d3')
        posedge @clk
        assign @d1=1
        assign @d2=1
        assign @d3=0
        go 5
        @assert_eq(dout,0,'arb select d0')
        posedge @clk
        assign @d1=0
        assign @d2=1
        assign @d3=1
        go 5
        @assert_eq(dout,1,'arb select d1')
        posedge @clk
        assign @d1=0
        assign @d2=0
        assign @d3=0
        go 5
        @assert_eq(dout,0,'arb select d0')
        go 100
        @assert_report('round arb test')
        @sim_finish()

module.exports=roundArbTb
