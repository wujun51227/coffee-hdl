#########################################################3
# Design
#########################################################3

class chdl_assert extends Module
  constructor: ->
    super()
    Reg(
      assert_fail_flag: vreg().init(0)
      assert_message: vreg(512).init(0)
    )
    @message_prefix='[chdl_message]  '
    @assert_prefix='[chdl_assert]  '

  sToHex: (s)->
    buf=Buffer.from(s)
    return "512'h"+buf.toString('hex')

  report_gen: ()->
    self=this
    return (message='')->
      if message
        assign self.assert_message = self.sToHex(message)
        @display("#{self.message_prefix}%0s",$(self.assert_message))
      $if(self.assert_fail_flag==0)
        @display("#{self.assert_prefix}===============")
        @display("#{self.assert_prefix}Case Pass")
        @display("#{self.assert_prefix}===============")
      $else
        @display("#{self.assert_prefix}===============")
        @display("#{self.assert_prefix}Case Fail")
        @display("#{self.assert_prefix}===============")
        @display("    __  ____           _                ______      _ __         __")
        @display("   /  |/  (_)_________(_)___  ____     / ____/___ _(_) /__  ____/ /")
        @display("  / /|_/ / / ___/ ___/ / __ \\\\/ __ \\\\   / /_  / __ `/ / / _ \\\\/ __  / ")
        @display(" / /  / / (__  |__  ) / /_/ / / / /  / __/ / /_/ / / /  __/ /_/ /  ")
        @display("/_/  /_/_/____/____/_/\\\\____/_/ /_/  /_/    \\\\__,_/_/_/\\\\___/\\\\__,_/   ")
                                                                      
  compare_gen: (type)->
    self=this
    return (sig,value,message='')->
      if message
        assign self.assert_message = self.sToHex(message)
        @verilog("$display(\"#{self.message_prefix}%0s\",#{$(self.assert_message)});")
      if type=='eq'
        $if(sig!=value)
          @verilog("$display(\"#{self.assert_prefix}%0t Error: #{sig.getName()} should == #{value}\",$time);")
          assign self.assert_fail_flag = 1
      else if type=='ne'
        $if(sig==value)
          @verilog("$display(\"#{self.assert_prefix}%0t Error: #{sig.getName()} should != #{value}\",$time);")
          assign self.assert_fail_flag = 1
      else if type=='ge'
        $if(sig<value)
          @verilog("$display(\"#{self.assert_prefix}%0t Error: #{sig.getName()} should > #{value}\",$time);")
          assign self.assert_fail_flag = 1
      else if type=='gt'
        $if(sig<=value)
          @verilog("$display(\"#{self.assert_prefix}%0t Error: #{sig.getName()} should >= #{value}\",$time);")
          assign self.assert_fail_flag = 1
      else if type=='le'
        $if(sig>value)
          @verilog("$display(\"#{self.assert_prefix}%0t Error: #{sig.getName()} should <= #{value}\",$time);")
          assign self.assert_fail_flag = 1
      else if type=='lt'
        $if(sig>=value)
          @verilog("$display(\"#{self.assert_prefix}%0t Error: #{sig.getName()} should < #{value}\",$time);")
          assign self.assert_fail_flag = 1

  build: ->

module.exports=chdl_assert
